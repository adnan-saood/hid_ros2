name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      
      - name: Install pre-commit
        run: pip install pre-commit
      
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

  build-and-test:
    name: Build & Test (${{ matrix.ros_distro }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [humble, iron]
    container:
      image: ros:${{ matrix.ros_distro }}
    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            libhidapi-dev \
            python3-pip \
            lcov \
            gcovr
          rm -rf /var/lib/apt/lists/*
      
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src/hid_ros2
      
      - name: Install ROS dependencies
        run: |
          . /opt/ros/${{ matrix.ros_distro }}/setup.sh
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y
      
      - name: Build workspace
        run: |
          . /opt/ros/${{ matrix.ros_distro }}/setup.sh
          colcon build \
            --cmake-args \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            --event-handlers console_direct+
      
      - name: Run tests
        run: |
          . /opt/ros/${{ matrix.ros_distro }}/setup.sh
          colcon test \
            --event-handlers console_direct+ \
            --return-code-on-test-failure
      
      - name: Show test results
        if: always()
        run: |
          colcon test-result --verbose
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.ros_distro }}
          path: log/latest_test/
          retention-days: 30
      
      - name: Upload build logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-${{ matrix.ros_distro }}
          path: log/latest_build/
          retention-days: 30

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    container:
      image: ros:humble
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            libhidapi-dev \
            python3-pip \
            gcovr
          rm -rf /var/lib/apt/lists/*
      
      - uses: actions/checkout@v4
        with:
          path: src/hid_ros2
      
      - name: Install ROS dependencies
        run: |
          . /opt/ros/humble/setup.sh
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y
      
      - name: Build with coverage
        run: |
          . /opt/ros/humble/setup.sh
          colcon build \
            --cmake-args \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_CXX_FLAGS="--coverage" \
              -DCMAKE_C_FLAGS="--coverage" \
            --event-handlers console_direct+
      
      - name: Run tests
        run: |
          . /opt/ros/humble/setup.sh
          colcon test --event-handlers console_direct+
      
      - name: Generate coverage report
        run: |
          gcovr -r . \
            --filter 'src/hid_ros2/hid_hardware/src/.*' \
            --filter 'src/hid_ros2/hid_generic_broadcaster/src/.*' \
            --filter 'src/hid_ros2/hid_diagnostic_broadcaster/src/.*' \
            --filter 'src/hid_ros2/signal_command_controller/src/.*' \
            --filter 'src/hid_ros2/dummy_pose_broadcaster/src/.*' \
            --exclude 'build/.*' \
            --exclude '.*test.*' \
            --xml coverage.xml \
            --print-summary
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false