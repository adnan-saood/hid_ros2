name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup ROS2 for linting tools
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install ament linting tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ros-humble-ament-cmake-clang-format \
            ros-humble-ament-cmake-cppcheck \
            ros-humble-ament-cmake-cpplint \
            ros-humble-ament-cmake-lint-cmake \
            ros-humble-ament-copyright

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          pre-commit run --all-files --show-diff-on-failure

  build-and-test:
    name: Build & Test (${{ matrix.ros_distro }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [humble, iron]
    container:
      image: ros:${{ matrix.ros_distro }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src/hid_ros2

      - name: Setup ROS2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distro }}

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            libhidapi-dev \
            python3-pip \
            python3-yaml \
            lcov \
            gcovr
          rm -rf /var/lib/apt/lists/*
      - name: Install Python dependencies
        run: |
          pip3 install hidapi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src/hid_ros2

      - name: Install ROS dependencies
        run: |
          apt update && apt upgrade -y
          source /opt/ros/${{ matrix.ros_distro }}/setup.sh
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Build workspace
        shell: bash
        run: |
          . /opt/ros/${{ matrix.ros_distro }}/setup.sh
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

      - name: Run tests
        shell: bash
        run: |
          . /opt/ros/${{ matrix.ros_distro }}/setup.sh
          colcon test --event-handlers console_direct+

      - name: Display test results
        shell: bash
        run: |
          colcon test-result --all --verbose

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.ros_distro }}
          path: log/latest_test/
          retention-days: 30

      - name: Upload build logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-${{ matrix.ros_distro }}
          path: log/latest_build/
          retention-days: 30

  coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src/hid_ros2

      - name: Setup ROS2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libhidapi-dev \
            python3-pip \
            python3-yaml \
            gcovr
          pip3 install hidapi

      - name: Install ROS dependencies
        run: |
          source /opt/ros/humble/setup.bash
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Build workspace with coverage
        shell: bash
        run: |
          . /opt/ros/humble/setup.sh
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_C_FLAGS="--coverage"

      - name: Run tests
        shell: bash
        run: |
          . /opt/ros/humble/setup.sh
          colcon test --event-handlers console_direct+

      - name: Generate coverage report
        shell: bash
        run: |
          . /opt/ros/humble/setup.sh
          gcovr --xml coverage.xml --root . --exclude-unreachable-branches --exclude-throw-branches -e ".*/test/.*" -e ".*/build/.*"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
